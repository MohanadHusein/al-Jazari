from machine import I2C, Pin
import time

class SSD1306:
    SSD1306_SCREEN_I2C_ADDR = 0x3C

    # ascii characters list, 8x8
    font_dict = {
    0x20 : bytes([0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00]),
    0x21 : bytes([0x00,0x06,0x5F,0x5F,0x06,0x00,0x00,0x00]),
    0x22 : bytes([0x00,0x07,0x07,0x00,0x07,0x07,0x00,0x00]),
    0x23 : bytes([0x14,0x7F,0x7F,0x14,0x7F,0x7F,0x14,0x00]),
    0x24 : bytes([0x24,0x2E,0x6B,0x6B,0x3A,0x12,0x00,0x00]),
    0x25 : bytes([0x46,0x66,0x30,0x18,0x0C,0x66,0x62,0x00]),
    0x26 : bytes([0x30,0x7A,0x4F,0x5D,0x37,0x7A,0x48,0x00]),
    0x27 : bytes([0x04,0x07,0x03,0x00,0x00,0x00,0x00,0x00]),
    0x28 : bytes([0x00,0x1C,0x3E,0x63,0x41,0x00,0x00,0x00]),
    0x29 : bytes([0x00,0x41,0x63,0x3E,0x1C,0x00,0x00,0x00]),
    0x2A : bytes([0x08,0x2A,0x3E,0x1C,0x1C,0x3E,0x2A,0x08]),
    0x2B : bytes([0x08,0x08,0x3E,0x3E,0x08,0x08,0x00,0x00]),
    0x2C : bytes([0x00,0xA0,0xE0,0x60,0x00,0x00,0x00,0x00]),
    0x2D : bytes([0x08,0x08,0x08,0x08,0x08,0x08,0x00,0x00]),
    0x2E : bytes([0x00,0x00,0x60,0x60,0x00,0x00,0x00,0x00]),
    0x2F : bytes([0x60,0x30,0x18,0x0C,0x06,0x03,0x01,0x00]),
    0x30 : bytes([0x3E,0x7F,0x59,0x4D,0x7F,0x3E,0x00,0x00]),
    0x31 : bytes([0x42,0x42,0x7F,0x7F,0x40,0x40,0x00,0x00]),
    0x32 : bytes([0x62,0x73,0x59,0x49,0x6F,0x66,0x00,0x00]),
    0x33 : bytes([0x22,0x63,0x49,0x49,0x7F,0x36,0x00,0x00]),
    0x34 : bytes([0x18,0x1C,0x16,0x13,0x7F,0x7F,0x10,0x00]),
    0x35 : bytes([0x27,0x67,0x45,0x45,0x7D,0x39,0x00,0x00]),
    0x36 : bytes([0x3C,0x7E,0x4B,0x49,0x79,0x30,0x00,0x00]),
    0x37 : bytes([0x03,0x63,0x71,0x19,0x0F,0x07,0x00,0x00]),
    0x38 : bytes([0x36,0x7F,0x49,0x49,0x7F,0x36,0x00,0x00]),
    0x39 : bytes([0x06,0x4F,0x49,0x69,0x3F,0x1E,0x00,0x00]),
    0x3A : bytes([0x00,0x00,0x6C,0x6C,0x00,0x00,0x00,0x00]),
    0x3B : bytes([0x00,0xA0,0xEC,0x6C,0x00,0x00,0x00,0x00]),
    0x3C : bytes([0x08,0x1C,0x36,0x63,0x41,0x00,0x00,0x00]),
    0x3D : bytes([0x14,0x14,0x14,0x14,0x14,0x14,0x00,0x00]),
    0x3E : bytes([0x00,0x41,0x63,0x36,0x1C,0x08,0x00,0x00]),
    0x3F : bytes([0x02,0x03,0x51,0x59,0x0F,0x06,0x00,0x00]),
    0x40 : bytes([0x3E,0x7F,0x41,0x5D,0x5D,0x1F,0x1E,0x00]),
    0x41 : bytes([0x7C,0x7E,0x13,0x13,0x7E,0x7C,0x00,0x00]),
    0x42 : bytes([0x41,0x7F,0x7F,0x49,0x49,0x7F,0x36,0x00]),
    0x43 : bytes([0x1C,0x3E,0x63,0x41,0x41,0x63,0x22,0x00]),
    0x44 : bytes([0x41,0x7F,0x7F,0x41,0x63,0x7F,0x1C,0x00]),
    0x45 : bytes([0x41,0x7F,0x7F,0x49,0x5D,0x41,0x63,0x00]),
    0x46 : bytes([0x41,0x7F,0x7F,0x49,0x1D,0x01,0x03,0x00]),
    0x47 : bytes([0x1C,0x3E,0x63,0x41,0x51,0x73,0x72,0x00]),
    0x48 : bytes([0x7F,0x7F,0x08,0x08,0x7F,0x7F,0x00,0x00]),
    0x49 : bytes([0x00,0x41,0x7F,0x7F,0x41,0x00,0x00,0x00]),
    0x4A : bytes([0x30,0x70,0x40,0x41,0x7F,0x3F,0x01,0x00]),
    0x4B : bytes([0x41,0x7F,0x7F,0x08,0x1C,0x77,0x63,0x00]),
    0x4C : bytes([0x41,0x7F,0x7F,0x41,0x40,0x60,0x70,0x00]),
    0x4D : bytes([0x7F,0x7F,0x06,0x0C,0x06,0x7F,0x7F,0x00]),
    0x4E : bytes([0x7F,0x7F,0x06,0x0C,0x18,0x7F,0x7F,0x00]),
    0x4F : bytes([0x1C,0x3E,0x63,0x41,0x63,0x3E,0x1C,0x00]),
    0x50 : bytes([0x41,0x7F,0x7F,0x49,0x09,0x0F,0x06,0x00]),
    0x51 : bytes([0x1E,0x3F,0x21,0x71,0x7F,0x5E,0x00,0x00]),
    0x52 : bytes([0x41,0x7F,0x7F,0x19,0x39,0x6F,0x46,0x00]),
    0x53 : bytes([0x26,0x67,0x4D,0x59,0x7B,0x32,0x00,0x00]),
    0x54 : bytes([0x03,0x41,0x7F,0x7F,0x41,0x03,0x00,0x00]),
    0x55 : bytes([0x7F,0x7F,0x40,0x40,0x7F,0x7F,0x00,0x00]),
    0x56 : bytes([0x1F,0x3F,0x60,0x60,0x3F,0x1F,0x00,0x00]),
    0x57 : bytes([0x7F,0x7F,0x30,0x18,0x30,0x7F,0x7F,0x00]),
    0x58 : bytes([0x63,0x77,0x1C,0x08,0x1C,0x77,0x63,0x00]),
    0x59 : bytes([0x07,0x4F,0x78,0x78,0x4F,0x07,0x00,0x00]),
    0x5A : bytes([0x67,0x73,0x59,0x4D,0x47,0x63,0x71,0x00]),
    0x5B : bytes([0x00,0x7F,0x7F,0x41,0x41,0x00,0x00,0x00]),
    0x5C : bytes([0x01,0x03,0x06,0x0C,0x18,0x30,0x60,0x00]),
    0x5D : bytes([0x00,0x41,0x41,0x7F,0x7F,0x00,0x00,0x00]),
    0x5E : bytes([0x08,0x0C,0x06,0x03,0x06,0x0C,0x08,0x00]),
    0x5F : bytes([0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80]),
    0x60 : bytes([0x00,0x00,0x03,0x07,0x04,0x00,0x00,0x00]),
    0x61 : bytes([0x20,0x74,0x54,0x54,0x3C,0x78,0x40,0x00]),
    0x62 : bytes([0x41,0x3F,0x7F,0x44,0x44,0x7C,0x38,0x00]),
    0x63 : bytes([0x38,0x7C,0x44,0x44,0x6C,0x28,0x00,0x00]),
    0x64 : bytes([0x30,0x78,0x48,0x49,0x3F,0x7F,0x40,0x00]),
    0x65 : bytes([0x38,0x7C,0x54,0x54,0x5C,0x18,0x00,0x00]),
    0x66 : bytes([0x48,0x7E,0x7F,0x49,0x03,0x02,0x00,0x00]),
    0x67 : bytes([0x98,0xBC,0xA4,0xA4,0xF8,0x7C,0x04,0x00]),
    0x68 : bytes([0x41,0x7F,0x7F,0x08,0x04,0x7C,0x78,0x00]),
    0x69 : bytes([0x00,0x44,0x7D,0x7D,0x40,0x00,0x00,0x00]),
    0x6A : bytes([0x40,0xC4,0x84,0xFD,0x7D,0x00,0x00,0x00]),
    0x6B : bytes([0x41,0x7F,0x7F,0x10,0x38,0x6C,0x44,0x00]),
    0x6C : bytes([0x00,0x41,0x7F,0x7F,0x40,0x00,0x00,0x00]),
    0x6D : bytes([0x7C,0x7C,0x0C,0x18,0x0C,0x7C,0x78,0x00]),
    0x6E : bytes([0x7C,0x7C,0x04,0x04,0x7C,0x78,0x00,0x00]),
    0x6F : bytes([0x38,0x7C,0x44,0x44,0x7C,0x38,0x00,0x00]),
    0x70 : bytes([0x84,0xFC,0xF8,0xA4,0x24,0x3C,0x18,0x00]),
    0x71 : bytes([0x18,0x3C,0x24,0xA4,0xF8,0xFC,0x84,0x00]),
    0x72 : bytes([0x44,0x7C,0x78,0x44,0x1C,0x18,0x00,0x00]),
    0x73 : bytes([0x48,0x5C,0x54,0x54,0x74,0x24,0x00,0x00]),
    0x74 : bytes([0x00,0x04,0x3E,0x7F,0x44,0x24,0x00,0x00]),
    0x75 : bytes([0x3C,0x7C,0x40,0x40,0x3C,0x7C,0x40,0x00]),
    0x76 : bytes([0x1C,0x3C,0x60,0x60,0x3C,0x1C,0x00,0x00]),
    0x77 : bytes([0x3C,0x7C,0x60,0x30,0x60,0x7C,0x3C,0x00]),
    0x78 : bytes([0x44,0x6C,0x38,0x10,0x38,0x6C,0x44,0x00]),
    0x79 : bytes([0x9C,0xBC,0xA0,0xA0,0xFC,0x7C,0x00,0x00]),
    0x7A : bytes([0x4C,0x64,0x74,0x5C,0x4C,0x64,0x00,0x00]),
    0x7B : bytes([0x08,0x08,0x3E,0x77,0x41,0x41,0x00,0x00]),
    0x7C : bytes([0x00,0x00,0x00,0x77,0x77,0x00,0x00,0x00]),
    0x7D : bytes([0x41,0x41,0x77,0x3E,0x08,0x08,0x00,0x00]),
    0x7E : bytes([0x02,0x03,0x01,0x03,0x02,0x03,0x01,0x00]),
    0x7F : bytes([0x78,0x7C,0x46,0x43,0x46,0x7C,0x78,0x00])}

    def __init__(self, i2c):
        self.i2c = i2c
        self.initialize_screen()

    def initialize_screen(self):
        self.i2c.writeto_mem(self.SSD1306_SCREEN_I2C_ADDR, 0x00, bytes([0xAE])) # enable display =  off
        self.i2c.writeto_mem(self.SSD1306_SCREEN_I2C_ADDR, 0x00, bytes([0x81, 0xFF])) # set pixel contrast to 256 out 256
        self.i2c.writeto_mem(self.SSD1306_SCREEN_I2C_ADDR, 0x00, bytes([0x40])) # set display start line
        self.i2c.writeto_mem(self.SSD1306_SCREEN_I2C_ADDR, 0x00, bytes([0xD3, 0x00])) # set display offset
        self.i2c.writeto_mem(self.SSD1306_SCREEN_I2C_ADDR, 0x00, bytes([0xA1])) # segment mapping - col0 ->seg0
        self.i2c.writeto_mem(self.SSD1306_SCREEN_I2C_ADDR, 0x00, bytes([0xC8])) # scan direction - com0->com127
        self.i2c.writeto_mem(self.SSD1306_SCREEN_I2C_ADDR, 0x00, bytes([0xDA, 0x02])) # set com pins config to 128x32 pixels screen
        self.i2c.writeto_mem(self.SSD1306_SCREEN_I2C_ADDR, 0x00, bytes([0xA8, 0x1F])) # set mux ratio to 128x32 pixels screen
        self.i2c.writeto_mem(self.SSD1306_SCREEN_I2C_ADDR, 0x00, bytes([0x20, 0x00])) # set addressing mode to horizontal
        self.i2c.writeto_mem(self.SSD1306_SCREEN_I2C_ADDR, 0x00, bytes([0x8D, 0x14])) # enable charge pump
        self.i2c.writeto_mem(self.SSD1306_SCREEN_I2C_ADDR, 0x00, bytes([0xAF])) # enable display = on
        self.i2c.writeto_mem(self.SSD1306_SCREEN_I2C_ADDR, 0x00, bytes([0xA5])) # turn on all pixels of the display - self test
        time.sleep(1)
        self.i2c.writeto_mem(self.SSD1306_SCREEN_I2C_ADDR, 0x00, bytes([0xA4])) # set reading pixel values from RAM
        self.clear_screen()

    def set_row_col_idx(self, row_idx, col_idx): # row_idx = 0-3
        # set page(row) and col start and end address
        self.i2c.writeto_mem(self.SSD1306_SCREEN_I2C_ADDR, 0x00, bytes([0x22, row_idx, 0x7E]))
        self.i2c.writeto_mem(self.SSD1306_SCREEN_I2C_ADDR, 0x00, bytes([0x21, col_idx, 0x7F]))

    def write_text(self, text, row):
        self.clear_row(row)
        self.set_row_col_idx(row, 0)
        for char in text:
            self.i2c.writeto_mem(self.SSD1306_SCREEN_I2C_ADDR, 0x40, self.font_dict[ord(char)])

    def clear_screen(self):
        self.set_row_col_idx(0, 0)
        for num in range(4):
            self.clear_row(num)
        self.set_row_col_idx(0, 0)

    def clear_row(self, row):
        self.set_row_col_idx(row, 0)
        for num in range(16):
            self.i2c.writeto_mem(self.SSD1306_SCREEN_I2C_ADDR, 0x40, bytes([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]))


# if __name__ == "__main__":
i2c = I2C(0, scl=Pin(33), sda=Pin(32), freq=400000)
screen = SSD1306(i2c)









